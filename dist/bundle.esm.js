import _ from"lodash";import pino from"pino";import als from"async-local-storage";function lift(){let o;if(this.config.log=this.config.log||{},!1!==this.config.log.pretty){o=pino.pretty();let t=_.assign({errorProps:["extra"]},this.config.log.pretty);pino.pretty(t),o.pipe(process.stdout)}let t=pino(this.config.log,o);return this.logger=t,t.log=t.info.bind(t),["log","info","warn","error","trace"].forEach(o=>{let r=t[o].bind(t);t[o]=function(...o){als.get("traceId")?o[0]instanceof Error?r(...[...o,als.get("traceId")]):r(...[als.get("traceId"),...o]):r(...o)}}),global.logger=t,global.als=als,t}als.enable();export default lift;
//# sourceMappingURL=bundle.esm.js.map
