{"version":3,"file":"bundle.esm.js","sources":["../src/index.js"],"sourcesContent":["import _ from 'lodash';\nimport pino from 'pino';\nimport als from 'async-local-storage';\n\nals.enable();\n\nexport default function lift() {\n  this.config.log = this.config.log || {};\n  let pretty;\n\n  if (this.config.log.pretty !== false) {\n    pretty = pino.pretty();\n    let prettyConfig = _.assign(\n      {\n        errorProps: ['extra'],\n      },\n      this.config.log.pretty\n    );\n    pino.pretty(prettyConfig);\n    pretty.pipe(process.stdout);\n  }\n\n  let logger = pino(this.config.log, pretty);\n  this.logger = logger;\n\n  logger.log = logger.info.bind(logger);\n\n  ['log', 'info', 'warn', 'error', 'trace'].forEach((key) => {\n    let originFn = logger[key].bind(logger);\n    logger[key] = function wrap(...args) {\n      let traceId = als.get('traceId');\n      if (!traceId) {\n        originFn(...args);\n      }\n      else if (args[0] instanceof Error) {\n        originFn(...[...args, als.get('traceId')]);\n      }\n      else {\n        originFn(...[als.get('traceId'), ...args]);\n      }\n    };\n  });\n\n  global.logger = logger;\n  global.als = als;\n  return logger;\n}\n"],"names":["lift","pretty","config","log","this","pino","prettyConfig","_","assign","pipe","process","stdout","logger","info","bind","forEach","key","originFn","args","als","get","Error","enable"],"mappings":"kFAMA,SAAwBA,WAElBC,UADCC,OAAOC,IAAMC,KAAKF,OAAOC,SAGC,IAA3BC,KAAKF,OAAOC,IAAIF,OAAkB,GAC3BI,KAAKJ,aACVK,EAAeC,EAAEC,oBAEJ,UAEfJ,KAAKF,OAAOC,IAAIF,aAEbA,OAAOK,KACLG,KAAKC,QAAQC,YAGlBC,EAASP,KAAKD,KAAKF,OAAOC,IAAKF,eAC9BW,OAASA,IAEPT,IAAMS,EAAOC,KAAKC,KAAKF,IAE7B,MAAO,OAAQ,OAAQ,QAAS,SAASG,QAASC,QAC7CC,EAAWL,EAAOI,GAAKF,KAAKF,KACzBI,GAAO,YAAiBE,GACfC,IAAIC,IAAI,WAIbF,EAAK,aAAcG,eACVH,EAAMC,IAAIC,IAAI,mBAGjBD,IAAIC,IAAI,cAAeF,SANxBA,aAWXN,OAASA,SACTO,IAAMA,IACNP,EAzCTO,IAAIG"}